[{"C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\index.js":"1","C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\App.js":"2","C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\reportWebVitals.js":"3","C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\Post.js":"4","C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\firebase.js":"5","C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\ImageUpload.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":5104,"mtime":1611511652532,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":5187,"mtime":1611512477280,"results":"11","hashOfConfig":"8"},{"size":527,"mtime":1610944689615,"results":"12","hashOfConfig":"8"},{"size":2578,"mtime":1611040984138,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1qdudnu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\index.js",[],["30","31"],"C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\App.js",["32","33","34"],"import React,{useState,useEffect} from 'react'\nimport './App.css';\nimport Post from './Post'\n\nimport {db,auth} from './firebase'\nimport {Modal,Button,Input} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageUpload from './ImageUpload';\n\n\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50 ;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts,setPosts]=useState([]);\n  const [openLogIn,setOpenLogin]=useState(false);\n  const [open,setOpen]=useState(false);\n  const [email,setEmail]=useState('');\n  const [password,setPassword]=useState('');\n  const [username,setUsername]=useState('');\n  const [user,setUser]=useState(null);\n  useEffect(() => {\n    db.collection('posts').orderBy('timestamp','desc').onSnapshot(snapshot=>{\n      setPosts(snapshot.docs.map(doc=> ({id:doc.id,\n        post:doc.data()})))\n    })\n\n  }, [])\n\n  useEffect(()=>{\n   const unsubscribe=  auth.onAuthStateChanged((authUser)=>{\n      if(authUser){\n         setUser(authUser)\n         if(authUser.displayName){\n           //dont update username\n         }\n      }else{\n          setUser(null);\n      }\n    })\n    return()=>{\n      //Perform some Cleanup actions.\n      unsubscribe();\n    }\n  },[user,username])\n \n  //SignUp Function\n  const signUp=(event)=>{\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email,password)\n    .then((authUser)=>{\n     return authUser.user.updateProfile({\n        displayName:username\n\n      })\n    })\n    .catch((error)=>alert(error.message));\n    setEmail('');\n    setUsername('');\n    setPassword('');\n       setOpen(false)\n  }\n  \n  //Login Function\n  const logIn=(event)=>{\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email,password)\n    .catch((error)=>alert(error.message))\n    setOpenLogin(false);\n    setEmail('');\n    setUsername('');\n    setPassword('');\n\n  }\n  return (\n    <div className=\"App\">\n     <Modal\n   open={open}\n   \n   onClose={()=>setOpen(false)}\n   \n>\n  <div style={modalStyle} className={classes.paper}>\n    <form className=\"app__signUp\">\n    <center>\n    <img className=\"app_headerImg\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\">\n    </img>\n    </center>\n\n    <Input\n    placeholder=\"Username\"\n    type=\"text\"\n    value={username}\n    onChange={(e)=>setUsername(e.target.value)}\n    />\n    <Input\n    placeholder=\"Email\"\n    type=\"email\"\n    value={email}\n    onChange={(e)=>setEmail(e.target.value)}\n    />\n     <Input\n    placeholder=\"Password\"\n    type=\"password\"\n    value={password}\n    onChange={(e)=>setPassword(e.target.value)}\n    />\n    <Button type=\"submit\" disabled={!email} color=\"primary\" variant=\"contained\" onClick={signUp}>Sign-Up</Button>\n    </form>\n  </div>\n\n</Modal>\n<Modal\n   open={openLogIn}\n   \n   onClose={()=>setOpenLogin(false)}\n   \n>\n  <div style={modalStyle} className={classes.paper}>\n    <form className=\"app__signUp\">\n    <center>\n    <img className=\"app_headerImg\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\">\n    </img>\n    </center>\n   \n    <Input\n    placeholder=\"Email\"\n    type=\"email\"\n    value={email}\n    onChange={(e)=>setEmail(e.target.value)}\n    />\n     <Input\n    placeholder=\"Password\"\n    type=\"password\"\n    value={password}\n    onChange={(e)=>setPassword(e.target.value)}\n    />\n    <Button type=\"submit\" disabled={!email} color=\"primary\" variant=\"contained\" onClick={logIn}>Login</Button>\n    </form>\n  </div>\n\n</Modal>\n \n     {/* Header */}\n     <div className=\"app_header\">\n       <img className=\"app_headerImg\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\"></img>\n     {user?(<div>\n       <h2 className=\"user_name\">{user.displayName}</h2>\n       <Button color=\"secondary\" variant=\"contained\" onClick={()=>auth.signOut()}>LOGOUT</Button>\n       </div>\n       ):(\n         <div className=\"app_login\">\n          \n      <Button  onClick={()=>setOpenLogin(true)} color='primary' >Login</Button>\n     \n     <Button onClick={()=>setOpen(true)} color='primary' >SignUp</Button>\n     </div>\n     )}\n     </div>\n     {user?.displayName ?(\n  <ImageUpload username={user.displayName}/>\n\n  ):(\n    <center>\n   <h3 className=\"warning_text\">Login to add Post and Caption</h3>\n </center>\n)}\n  {/* By giving key=id we will say the system to only re-render new posts */}\n    \n<div className=\"app_posts\"> \n   {\n       posts.map(({id,post})=>(\n         <Post key={id} postId={id} user={user} username={post.username} caption={post.caption} imageUrl={post.imageUrl}\n       />\n       ))\n     }\n     </div>\n   \n    \n    \n    </div>\n  );\n}\n\nexport default App;\n ","C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\Post.js",["35","36"],"import React,{useState,useEffect} from 'react'\r\n// import Course from './course.jpg'\r\nimport './Post.css'\r\nimport {Avatar,Modal,Input,Button} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport firebase from 'firebase'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport { db } from './firebase'\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50 ;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\nfunction Post({postId,user,username,caption,imageUrl}) {\r\n    const classes = useStyles();\r\n   // const [modalStyle] = React.useState(getModalStyle);\r\n    const [open,setOpen]=useState(false);\r\n    const [comments,setComments]=useState([])\r\n    const [comment,setComment]=useState('')\r\n    const [input,setInput]=useState('');\r\n    //\r\n    \r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if(postId){\r\n            unsubscribe=db\r\n            .collection('posts')\r\n            .doc(postId)\r\n            .collection('comments')\r\n            .orderBy('timestamp','desc')\r\n            .onSnapshot((snapshot)=>{\r\n                setComments(snapshot.docs.map((doc)=>doc.data()));\r\n            //   SnapShot listener for comments of posts          \r\n            })\r\n            // .catch((error)=>alert(error.message))\r\n        }\r\n        return()=>{\r\n            unsubscribe();\r\n        };\r\n      \r\n    }, [postId])\r\n\r\n    //Add comment Function\r\n    const postComment=(e)=>{\r\n         e.preventDefault()\r\n        db.collection('posts').doc(postId).collection('comments').add({\r\n            text:comment,\r\n            username:user.displayName,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n        })\r\n        .catch((error)=>alert(error.message))\r\n        setComment('')\r\n    }\r\n    const deletePost=()=>{\r\n        if(user.displayName===username){\r\n             \r\n            db.collection('posts')\r\n            .doc(postId).delete()\r\n            \r\n        }else{\r\n          alert('You cannot delete other users post...Sorry')\r\n        }\r\n    }\r\n    const handleOpen=()=>{\r\n        setOpen(true)\r\n    }\r\n    const handleClose=()=>{\r\n        setOpen(false)\r\n    }\r\n    const updateTodo=()=>{\r\n        if(username){\r\n            db.collection('comments').doc(postId).set({\r\n                text:input\r\n              },{merge:true})\r\n                setOpen(false)\r\n                setInput('')\r\n        }else{\r\n            alert('You cannot edit others comments..Sorry')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n           \r\n              <Modal open={open} onClose={handleClose} className=\"modal\">\r\n            <div className={classes.paper}>\r\n            <CancelIcon onClick={handleClose} color=\"secondary\"></CancelIcon>\r\n            <h2>Update To-Do</h2>\r\n            <Input  value={input} onChange={event=> setInput(event.target.value)}/>\r\n           <Button onClick={updateTodo} color=\"primary\" variant=\"contained\">Update</Button>\r\n            </div>\r\n        </Modal>\r\n            \r\n            <div className=\"post_header\">\r\n\r\n            <Avatar \r\n            className=\"post__avatar\"\r\n            alt={username}\r\n            src=\"/static/images/avatar/1.jpg\"\r\n            />\r\n            <h3>{username}</h3>\r\n            {user  &&(\r\n            <button className=\"delete_button\" onClick={deletePost}>\r\n             <DeleteIcon />\r\n            </button>\r\n            )}\r\n            </div>\r\n           {/* header-->avatar+username  */}\r\n          <img src={imageUrl} className=\"post__image\"></img> \r\n          <h4 className=\"post__Text\"><strong>{username}</strong>:{caption}</h4>\r\n          <div className=\"post_comments\">\r\n              <h3 className=\"comment_tag\">Comments:</h3>\r\n              {\r\n                  comments.map((comment)=>(\r\n                      <div className=\"updateComment\">\r\n                   <p>\r\n                       <strong>{comment.username}</strong> :{comment.text}\r\n                   </p>\r\n                   {user &&(\r\n                   <EditIcon onClick={handleOpen} color=\"primary\" className=\"edit_button\">Edit Me</EditIcon>\r\n                   )}\r\n                   </div>\r\n                  ))\r\n              }\r\n\r\n          </div>\r\n          {user && (\r\n          <form className=\"comment_form\">\r\n           <input\r\n           className=\"post_input\"\r\n           type=\"text\"\r\n           placeholder=\"Add a comment\"\r\n           value={comment}\r\n           onChange={(e)=>setComment(e.target.value)}\r\n           />\r\n           <button type=\"submit\" disabled={!comment}  onClick={postComment} color=\"primary\" className=\"comment_btn\" >POST</button>\r\n           \r\n          </form>\r\n          )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\firebase.js",[],"C:\\Users\\Ayush\\Desktop\\React Projects\\Instagram Clone\\insta-clone\\src\\ImageUpload.js",[],["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":106,"column":5,"nodeType":"45","endLine":106,"endColumn":131},{"ruleId":"43","severity":1,"message":"44","line":142,"column":5,"nodeType":"45","endLine":142,"endColumn":131},{"ruleId":"43","severity":1,"message":"44","line":166,"column":8,"nodeType":"45","endLine":166,"endColumn":134},{"ruleId":"46","severity":1,"message":"47","line":11,"column":10,"nodeType":"48","messageId":"49","endLine":11,"endColumn":23},{"ruleId":"43","severity":1,"message":"44","line":128,"column":11,"nodeType":"45","endLine":128,"endColumn":55},{"ruleId":"39","replacedBy":"50"},{"ruleId":"41","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'getModalStyle' is defined but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]